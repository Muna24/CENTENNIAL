<?xml version="1.0" encoding="UTF-8"?>
<module name="tapi-virtual-network"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:tapi-virtual-network="urn:onf:otcc:yang:tapi-virtual-network"
        xmlns:tapi-topology="urn:onf:otcc:yang:tapi-topology"
        xmlns:tapi-common="urn:onf:otcc:yang:tapi-common">
  <namespace uri="urn:onf:otcc:yang:tapi-virtual-network"/>
  <prefix value="tapi-virtual-network"/>
  <import module="tapi-topology">
    <prefix value="tapi-topology"/>
  </import>
  <import module="tapi-common">
    <prefix value="tapi-common"/>
  </import>
  <organization>
    <text>ONF OTCC (Open Transport Configuration &amp; Control) Project</text>
  </organization>
  <contact>
    <text>
Project Web: &lt;https://wiki.opennetworking.org/display/OTCC/TAPI&gt;
Project List: &lt;mailto:transport-api@opennetworking.org&gt;
Editor: Karthik Sethuraman
   &lt;mailto:karthik.sethuraman@necam.com&gt;</text>
  </contact>
  <description>
    <text>
This module contains TAPI Virtual Network Model definitions.
Source: TapiVirtualNetwork.uml
Copyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.
License: This module is distributed under the Apache License 2.0</text>
  </description>
  <revision date="2018-08-31">
    <description>
      <text>ONF Transport API version 2.1.0
This YANG module has been generated from the TAPI UML Model using the IISOMI-Eagle xmi2yang mapping tool.
Changes in this revision: &lt;https://github.com/OpenNetworkingFoundation/TAPI/blob/develop/CHANGE_LOG/change-log.2.1.0.md&gt;</text>
    </description>
    <reference>
      <text>ONF-TR-527, ONF-TR-512, ONF-TR-531, RFC 6020, RFC 6087 and ONF TAPI UML model
&lt;https://github.com/OpenNetworkingFoundation/TAPI/tree/v2.1.0/UML&gt;</text>
    </reference>
  </revision>
  <revision date="2018-03-07">
    <description>
      <text>ONF Transport API version 2.0.2
This YANG module has been generated from the TAPI UML Model using the IISOMI-Eagle xmi2yang mapping tool.
Changes in this revision: &lt;https://github.com/OpenNetworkingFoundation/TAPI/blob/develop/CHANGE_LOG/change-log.2.0.2.md&gt;</text>
    </description>
    <reference>
      <text>ONF-TR-527, ONF-TR-512, ONF-TR-531, RFC 6020, RFC 6087 and ONF TAPI UML model
&lt;https://github.com/OpenNetworkingFoundation/TAPI/tree/v2.0.2/UML&gt;</text>
    </reference>
  </revision>
  <revision date="2018-02-16">
    <description>
      <text>ONF Transport API version 2.0.1
This YANG module has been generated from the TAPI UML Model using the IISOMI-Eagle xmi2yang mapping tool.
Changes in this revision: &lt;https://github.com/OpenNetworkingFoundation/TAPI/blob/develop/CHANGE_LOG/change-log.2.0.1.md&gt;</text>
    </description>
    <reference>
      <text>ONF-TR-527, ONF-TR-512, ONF-TR-531, RFC 6020, RFC 6087 and ONF TAPI UML model
&lt;https://github.com/OpenNetworkingFoundation/TAPI/tree/v2.0.1/UML&gt;</text>
    </reference>
  </revision>
  <revision date="2018-01-02">
    <description>
      <text>ONF Transport API version 2.0.0
This YANG module has been generated from the TAPI UML Model using the IISOMI-Eagle xmi2yang mapping tool.
Changes in this revision: &lt;https://github.com/OpenNetworkingFoundation/TAPI/blob/develop/CHANGE_LOG/change-log.2.0.0.md&gt;</text>
    </description>
    <reference>
      <text>ONF-TR-527, ONF-TR-512, ONF-TR-531, RFC 6020, RFC 6087 and ONF TAPI UML model
&lt;https://github.com/OpenNetworkingFoundation/TAPI/tree/v2.0.0/UML&gt;</text>
    </reference>
  </revision>
  <augment target-node="/tapi-common:context">
    <uses name="virtual-network-context-g"/>
    <description>
      <text>Augments the base TAPI Context with VirtualNetworkService information</text>
    </description>
  </augment>
  <grouping name="virtual-nw-service-ref-g">
    <leaf name="virtual-nw-service-uuid">
      <type name="leafref">
        <path value="/tapi-common:context/tapi-virtual-network:virtual-nw-service/tapi-virtual-network:uuid"/>
      </type>
      <description>
        <text>none</text>
      </description>
    </leaf>
    <description>
      <text>none</text>
    </description>
  </grouping>
  <grouping name="virtual-network-constraint-g">
    <container name="src-service-end-point">
      <uses name="tapi-common:service-interface-point-ref-g"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <container name="sink-service-end-point">
      <uses name="tapi-common:service-interface-point-ref-g"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <list name="diversity-exclusion">
      <uses name="virtual-nw-service-ref-g"/>
      <key value="virtual-nw-service-uuid"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </list>
    <container name="requested-capacity">
      <uses name="tapi-common:capacity-g"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <leaf name="service-level">
      <type name="string"/>
      <description>
        <text>An abstract value the meaning of which is mutually agreed â€“ typically represents metrics such as - Class of service, priority, resiliency, availability</text>
      </description>
    </leaf>
    <leaf-list name="service-layer">
      <type name="tapi-common:layer-protocol-name"/>
      <description>
        <text>none</text>
      </description>
    </leaf-list>
    <list name="cost-characteristic">
      <key value="cost-name"/>
      <uses name="tapi-topology:cost-characteristic-g"/>
      <description>
        <text>The list of costs where each cost relates to some aspect of the TopologicalEntity.</text>
      </description>
    </list>
    <list name="latency-characteristic">
      <key value="traffic-property-name"/>
      <uses name="tapi-topology:latency-characteristic-g"/>
      <description>
        <text>The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.</text>
      </description>
    </list>
    <uses name="tapi-common:local-class-g"/>
    <description>
      <text>none</text>
    </description>
  </grouping>
  <grouping name="virtual-network-service-g">
    <container name="topology">
      <uses name="tapi-topology:topology-ref-g"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <list name="end-point">
      <key value="local-id"/>
      <min-elements value="2"/>
      <uses name="virtual-network-service-end-point-g"/>
      <description>
        <text>none</text>
      </description>
    </list>
    <list name="vnw-constraint">
      <key value="local-id"/>
      <min-elements value="1"/>
      <uses name="virtual-network-constraint-g"/>
      <description>
        <text>none</text>
      </description>
    </list>
    <leaf name="schedule">
      <type name="string"/>
      <description>
        <text>none</text>
      </description>
    </leaf>
    <container name="state">
      <uses name="tapi-common:admin-state-pac-g"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <leaf-list name="layer-protocol-name">
      <type name="tapi-common:layer-protocol-name"/>
      <min-elements value="1"/>
      <description>
        <text>none</text>
      </description>
    </leaf-list>
    <uses name="tapi-common:service-spec-g"/>
    <description>
      <text>The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.
At the lowest level of recursion, a FC represents a cross-connection within an NE.</text>
    </description>
  </grouping>
  <grouping name="virtual-network-service-end-point-g">
    <container name="service-interface-point">
      <uses name="tapi-common:service-interface-point-ref-g"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </container>
    <leaf name="role">
      <type name="tapi-common:port-role"/>
      <config value="false"/>
      <description>
        <text>Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. </text>
      </description>
    </leaf>
    <leaf name="direction">
      <type name="tapi-common:port-direction"/>
      <config value="false"/>
      <description>
        <text>The orientation of defined flow at the EndPoint.</text>
      </description>
    </leaf>
    <leaf name="service-layer">
      <type name="tapi-common:layer-protocol-name"/>
      <config value="false"/>
      <description>
        <text>none</text>
      </description>
    </leaf>
    <uses name="tapi-common:local-class-g"/>
    <description>
      <text>The association of the FC to LTPs is made via EndPoints.
The EndPoint (EP) object class models the access to the FC function.
The traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.
In cases where there is resilience the EndPoint may convey the resilience role of the access to the FC.
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.
The EP replaces the Protection Unit of a traditional protection model.
The ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component</text>
    </description>
  </grouping>
  <grouping name="virtual-network-context-g">
    <list name="virtual-nw-service">
      <key value="uuid"/>
      <uses name="virtual-network-service-g"/>
      <description>
        <text>none</text>
      </description>
    </list>
    <description>
      <text>none</text>
    </description>
  </grouping>
  <rpc name="create-virtual-network-service">
    <description>
      <text>none</text>
    </description>
    <input>
      <list name="sep">
        <min-elements value="2"/>
        <uses name="virtual-network-service-end-point-g"/>
        <description>
          <text>none</text>
        </description>
      </list>
      <container name="vnw-constraint">
        <uses name="virtual-network-constraint-g"/>
        <description>
          <text>none</text>
        </description>
      </container>
      <leaf name="conn-schedule">
        <type name="string"/>
        <description>
          <text>none</text>
        </description>
      </leaf>
    </input>
    <output>
      <container name="service">
        <uses name="virtual-network-service-g"/>
        <description>
          <text>none</text>
        </description>
      </container>
    </output>
  </rpc>
  <rpc name="delete-virtual-network-service">
    <description>
      <text>none</text>
    </description>
    <input>
      <leaf name="service-id-or-name">
        <type name="string"/>
        <description>
          <text>none</text>
        </description>
      </leaf>
    </input>
    <output>
      <container name="service">
        <uses name="virtual-network-service-g"/>
        <description>
          <text>none</text>
        </description>
      </container>
    </output>
  </rpc>
  <rpc name="get-virtual-network-service-details">
    <description>
      <text>none</text>
    </description>
    <input>
      <leaf name="service-id-or-name">
        <type name="string"/>
        <description>
          <text>none</text>
        </description>
      </leaf>
    </input>
    <output>
      <container name="service">
        <uses name="virtual-network-service-g"/>
        <description>
          <text>none</text>
        </description>
      </container>
    </output>
  </rpc>
  <rpc name="get-virtual-network-service-list">
    <description>
      <text>none</text>
    </description>
    <output>
      <list name="service">
        <uses name="virtual-network-service-g"/>
        <description>
          <text>none</text>
        </description>
      </list>
    </output>
  </rpc>
</module>
