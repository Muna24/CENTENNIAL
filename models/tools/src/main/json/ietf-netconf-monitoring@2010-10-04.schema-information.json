{ "schmea-information": {

"ietf-netconf-monitoring": {
"id": "ietf-netconf-monitoring", 
"is-read-only": false, 
"description": ["NETCONF Monitoring Module. All elements in this module are read-only. Copyright (c) 2010 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this YANG module is part of RFC 6022; see the RFC itself for full legal notices."]
},
"netconf-datastore-type": {
"id": "netconf-datastore-type", 
"is-read-only": false, 
"description": ["Enumeration of possible NETCONF datastore types."]
},
"transport": {
"id": "transport", 
"is-read-only": false, 
"description": ["Base identity for NETCONF transport types."]
},
"netconf-ssh": {
"id": "netconf-ssh", 
"is-read-only": false, 
"description": ["NETCONF over Secure Shell (SSH)."]
},
"netconf-soap-over-beep": {
"id": "netconf-soap-over-beep", 
"is-read-only": false, 
"description": ["NETCONF over Simple Object Access Protocol (SOAP) over Blocks Extensible Exchange Protocol (BEEP)."]
},
"netconf-soap-over-https": {
"id": "netconf-soap-over-https", 
"is-read-only": false, 
"description": ["NETCONF over Simple Object Access Protocol (SOAP) over Hypertext Transfer Protocol Secure (HTTPS)."]
},
"netconf-beep": {
"id": "netconf-beep", 
"is-read-only": false, 
"description": ["NETCONF over Blocks Extensible Exchange Protocol (BEEP)."]
},
"netconf-tls": {
"id": "netconf-tls", 
"is-read-only": false, 
"description": ["NETCONF over Transport Layer Security (TLS)."]
},
"schema-format": {
"id": "schema-format", 
"is-read-only": false, 
"description": ["Base identity for data model schema languages."]
},
"xsd": {
"id": "xsd", 
"is-read-only": false, 
"description": ["W3C XML Schema Definition."]
},
"yang": {
"id": "yang", 
"is-read-only": false, 
"description": ["The YANG data modeling language for NETCONF."]
},
"yin": {
"id": "yin", 
"is-read-only": false, 
"description": ["The YIN syntax for YANG."]
},
"rng": {
"id": "rng", 
"is-read-only": false, 
"description": ["Regular Language for XML Next Generation (RELAX NG)."]
},
"rnc": {
"id": "rnc", 
"is-read-only": false, 
"description": ["Relax NG Compact Syntax"]
},
"common-counters": {
"id": "common-counters", 
"is-read-only": false, 
"description": ["Counters that exist both per session, and also globally, accumulated from all sessions."]
},
"in-rpcs": {
"id": "in-rpcs", 
"is-read-only": false, 
"description": ["Number of correct <rpc> messages received."]
},
"in-bad-rpcs": {
"id": "in-bad-rpcs", 
"is-read-only": false, 
"description": ["Number of messages received when an <rpc> message was expected, that were not correct <rpc> messages. This includes XML parse errors and errors on the rpc layer."]
},
"out-rpc-errors": {
"id": "out-rpc-errors", 
"is-read-only": false, 
"description": ["Number of <rpc-reply> messages sent that contained an <rpc-error> element."]
},
"out-notifications": {
"id": "out-notifications", 
"is-read-only": false, 
"description": ["Number of <notification> messages sent."]
},
"netconf-state": {
"id": "netconf-state", 
"is-read-only": false, 
"description": ["The netconf-state container is the root of the monitoring data model."]
},
"capabilities": {
"id": "capabilities", 
"is-read-only": false, 
"description": ["Contains the list of NETCONF capabilities supported by the server."]
},
"capability": {
"id": "capability", 
"is-read-only": false, 
"description": ["List of NETCONF capabilities supported by the server."]
},
"datastores": {
"id": "datastores", 
"is-read-only": false, 
"description": ["Contains the list of NETCONF configuration datastores."]
},
"datastore": {
"id": "datastore", 
"is-read-only": false, 
"description": ["List of NETCONF configuration datastores supported by the NETCONF server and related information."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["Name of the datastore associated with this list entry."]
},
"locks": {
"id": "locks", 
"is-read-only": false, 
"description": ["The NETCONF <lock> and <partial-lock> operations allow a client to lock specific resources in a datastore. The NETCONF server will prevent changes to the locked resources by all sessions except the one that acquired the lock(s). Monitoring information is provided for each datastore entry including details such as the session that acquired the lock, the type of lock (global or partial) and the list of locked resources. Multiple locks per datastore are supported."]
},
"lock-info": {
"id": "lock-info", 
"is-read-only": false, 
"description": ["Lock related parameters, common to both global and partial locks."]
},
"locked-by-session": {
"id": "locked-by-session", 
"is-read-only": false, 
"description": ["The session ID of the session that has locked this resource. Both a global lock and a partial lock MUST contain the NETCONF session-id. If the lock is held by a session that is not managed by the NETCONF server (e.g., a CLI session), a session id of 0 (zero) is reported."]
},
"locked-time": {
"id": "locked-time", 
"is-read-only": false, 
"description": ["The date and time of when the resource was locked."]
},
"lock-type": {
"id": "lock-type", 
"is-read-only": false, 
"description": ["Indicates if a global lock or a set of partial locks are set."]
},
"global-lock": {
"id": "global-lock", 
"is-read-only": false, 
"description": ["Present if the global lock is set."]
},
"partial-lock": {
"id": "partial-lock", 
"is-read-only": false, 
"description": ["List of partial locks."]
},
"lock-id": {
"id": "lock-id", 
"is-read-only": false, 
"description": ["This is the lock id returned in the <partial-lock> response."]
},
"select": {
"id": "select", 
"is-read-only": false, 
"description": ["The xpath expression that was used to request the lock. The select expression indicates the original intended scope of the lock."]
},
"locked-node": {
"id": "locked-node", 
"is-read-only": false, 
"description": ["The list of instance-identifiers (i.e., the locked nodes). The scope of the partial lock is defined by the list of locked nodes."]
},
"schemas": {
"id": "schemas", 
"is-read-only": false, 
"description": ["Contains the list of data model schemas supported by the server."]
},
"schema": {
"id": "schema", 
"is-read-only": false, 
"description": ["List of data model schemas supported by the server."]
},
"identifier": {
"id": "identifier", 
"is-read-only": false, 
"description": ["Identifier to uniquely reference the schema. The identifier is used in the <get-schema> operation and may be used for other purposes such as file retrieval. For modeling languages that support or require a data model name (e.g., YANG module name) the identifier MUST match that name. For YANG data models, the identifier is the name of the module or submodule. In other cases, an identifier such as a filename MAY be used instead."]
},
"version": {
"id": "version", 
"is-read-only": false, 
"description": ["Version of the schema supported. Multiple versions MAY be supported simultaneously by a NETCONF server. Each version MUST be reported individually in the schema list, i.e., with same identifier, possibly different location, but different version. For YANG data models, version is the value of the most recent YANG 'revision' statement in the module or submodule, or the empty string if no 'revision' statement is present."]
},
"format": {
"id": "format", 
"is-read-only": false, 
"description": ["The data modeling language the schema is written in (currently xsd, yang, yin, rng, or rnc). For YANG data models, 'yang' format MUST be supported and 'yin' format MAY also be provided."]
},
"namespace": {
"id": "namespace", 
"is-read-only": false, 
"description": ["The XML namespace defined by the data model. For YANG data models, this is the module's namespace. If the list entry describes a submodule, this field contains the namespace of the module to which the submodule belongs."]
},
"location": {
"id": "location", 
"is-read-only": false, 
"description": ["One or more locations from which the schema can be retrieved. This list SHOULD contain at least one entry per schema. A schema entry may be located on a remote file system (e.g., reference to file system for ftp retrieval) or retrieved directly from a server supporting the <get-schema> operation (denoted by the value 'NETCONF')."]
},
"sessions": {
"id": "sessions", 
"is-read-only": false, 
"description": ["The sessions container includes session-specific data for NETCONF management sessions. The session list MUST include all currently active NETCONF sessions."]
},
"session": {
"id": "session", 
"is-read-only": false, 
"description": ["All NETCONF sessions managed by the NETCONF server MUST be reported in this list."]
},
"session-id": {
"id": "session-id", 
"is-read-only": false, 
"description": ["Unique identifier for the session. This value is the NETCONF session identifier, as defined in RFC 4741."]
},
"transport": {
"id": "transport", 
"is-read-only": false, 
"description": ["Identifies the transport for each session, e.g., 'netconf-ssh', 'netconf-soap', etc."]
},
"username": {
"id": "username", 
"is-read-only": false, 
"description": ["The username is the client identity that was authenticated by the NETCONF transport protocol. The algorithm used to derive the username is NETCONF transport protocol specific and in addition specific to the authentication mechanism used by the NETCONF transport protocol."]
},
"source-host": {
"id": "source-host", 
"is-read-only": false, 
"description": ["Host identifier of the NETCONF client. The value returned is implementation specific (e.g., hostname, IPv4 address, IPv6 address)"]
},
"login-time": {
"id": "login-time", 
"is-read-only": false, 
"description": ["Time at the server at which the session was established."]
},
"common-counters": {
"id": "common-counters", 
"is-read-only": false, 
"description": ["Per-session counters. Zero based with following reset behaviour: - at start of a session - when max value is reached"]
},
"statistics": {
"id": "statistics", 
"is-read-only": false, 
"description": ["Statistical data pertaining to the NETCONF server."]
},
"netconf-start-time": {
"id": "netconf-start-time", 
"is-read-only": false, 
"description": ["Date and time at which the management subsystem was started."]
},
"in-bad-hellos": {
"id": "in-bad-hellos", 
"is-read-only": false, 
"description": ["Number of sessions silently dropped because an invalid <hello> message was received. This includes <hello> messages with a 'session-id' attribute, bad namespace, and bad capability declarations."]
},
"in-sessions": {
"id": "in-sessions", 
"is-read-only": false, 
"description": ["Number of sessions started. This counter is incremented when a <hello> message with a <session-id> is sent. 'in-sessions' - 'in-bad-hellos' = 'number of correctly started netconf sessions'"]
},
"dropped-sessions": {
"id": "dropped-sessions", 
"is-read-only": false, 
"description": ["Number of sessions that were abnormally terminated, e.g., due to idle timeout or transport close. This counter is not incremented when a session is properly closed by a <close-session> operation, or killed by a <kill-session> operation."]
},
"common-counters": {
"id": "common-counters", 
"is-read-only": false, 
"description": ["Global counters, accumulated from all sessions. Zero based with following reset behaviour: - re-initialization of NETCONF server - when max value is reached"]
},
"get-schema": {
"id": "get-schema", 
"is-read-only": false, 
"description": ["This operation is used to retrieve a schema from the NETCONF server. Positive Response: The NETCONF server returns the requested schema. Negative Response: If requested schema does not exist, the <error-tag> is 'invalid-value'. If more than one schema matches the requested parameters, the <error-tag> is 'operation-failed', and <error-app-tag> is 'data-not-unique'."]
},
"identifier": {
"id": "identifier", 
"is-read-only": false, 
"description": ["Identifier for the schema list entry."]
},
"version": {
"id": "version", 
"is-read-only": false, 
"description": ["Version of the schema requested. If this parameter is not present, and more than one version of the schema exists on the server, a 'data-not-unique' error is returned, as described above."]
},
"format": {
"id": "format", 
"is-read-only": false, 
"description": ["The data modeling language of the schema. If this parameter is not present, and more than one formats of the schema exists on the server, a 'data-not-unique' error is returned, as described above."]
},
"data": {
"id": "data", 
"is-read-only": false, 
"description": ["Contains the schema content."]
}}
}