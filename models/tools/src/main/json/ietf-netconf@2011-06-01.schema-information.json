{ "schmea-information": {

"ietf-netconf": {
"id": "ietf-netconf", 
"is-read-only": false, 
"description": ["NETCONF Protocol Data Types and Protocol Operations. Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this YANG module is part of RFC 6241; see the RFC itself for full legal notices."]
},
"get-filter-element-attributes": {
"id": "get-filter-element-attributes", 
"is-read-only": false, 
"description": ["If this extension is present within an 'anyxml' statement named 'filter', which must be conceptually defined within the RPC input section for the <get> and <get-config> protocol operations, then the following unqualified XML attribute is supported within the <filter> element, within a <get> or <get-config> protocol operation: type : optional attribute with allowed value strings 'subtree' and 'xpath'. If missing, the default value is 'subtree'. If the 'xpath' feature is supported, then the following unqualified XML attribute is also supported: select: optional attribute containing a string representing an XPath expression. The 'type' attribute must be equal to 'xpath' if this attribute is present."]
},
"writable-running": {
"id": "writable-running", 
"is-read-only": false, 
"description": ["NETCONF :writable-running capability; If the server advertises the :writable-running capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["NETCONF :candidate capability; If the server advertises the :candidate capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"confirmed-commit": {
"id": "confirmed-commit", 
"is-read-only": false, 
"description": ["NETCONF :confirmed-commit:1.1 capability; If the server advertises the :confirmed-commit:1.1 capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"rollback-on-error": {
"id": "rollback-on-error", 
"is-read-only": false, 
"description": ["NETCONF :rollback-on-error capability; If the server advertises the :rollback-on-error capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"validate": {
"id": "validate", 
"is-read-only": false, 
"description": ["NETCONF :validate:1.1 capability; If the server advertises the :validate:1.1 capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["NETCONF :startup capability; If the server advertises the :startup capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["NETCONF :url capability; If the server advertises the :url capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"xpath": {
"id": "xpath", 
"is-read-only": false, 
"description": ["NETCONF :xpath capability; If the server advertises the :xpath capability for a session, then this feature must also be enabled for that session. Otherwise, this feature must not be enabled."]
},
"session-id-type": {
"id": "session-id-type", 
"is-read-only": false, 
"description": ["NETCONF Session Id"]
},
"session-id-or-zero-type": {
"id": "session-id-or-zero-type", 
"is-read-only": false, 
"description": ["NETCONF Session Id or Zero to indicate none"]
},
"in-use": {
"id": "in-use", 
"is-read-only": false, 
"description": ["The request requires a resource that already is in use."]
},
"invalid-value": {
"id": "invalid-value", 
"is-read-only": false, 
"description": ["The request specifies an unacceptable value for one or more parameters."]
},
"too-big": {
"id": "too-big", 
"is-read-only": false, 
"description": ["The request or response (that would be generated) is too large for the implementation to handle."]
},
"missing-attribute": {
"id": "missing-attribute", 
"is-read-only": false, 
"description": ["An expected attribute is missing."]
},
"bad-attribute": {
"id": "bad-attribute", 
"is-read-only": false, 
"description": ["An attribute value is not correct; e.g., wrong type, out of range, pattern mismatch."]
},
"unknown-attribute": {
"id": "unknown-attribute", 
"is-read-only": false, 
"description": ["An unexpected attribute is present."]
},
"missing-element": {
"id": "missing-element", 
"is-read-only": false, 
"description": ["An expected element is missing."]
},
"bad-element": {
"id": "bad-element", 
"is-read-only": false, 
"description": ["An element value is not correct; e.g., wrong type, out of range, pattern mismatch."]
},
"unknown-element": {
"id": "unknown-element", 
"is-read-only": false, 
"description": ["An unexpected element is present."]
},
"unknown-namespace": {
"id": "unknown-namespace", 
"is-read-only": false, 
"description": ["An unexpected namespace is present."]
},
"access-denied": {
"id": "access-denied", 
"is-read-only": false, 
"description": ["Access to the requested protocol operation or data model is denied because authorization failed."]
},
"lock-denied": {
"id": "lock-denied", 
"is-read-only": false, 
"description": ["Access to the requested lock is denied because the lock is currently held by another entity."]
},
"resource-denied": {
"id": "resource-denied", 
"is-read-only": false, 
"description": ["Request could not be completed because of insufficient resources."]
},
"rollback-failed": {
"id": "rollback-failed", 
"is-read-only": false, 
"description": ["Request to roll back some configuration change (via rollback-on-error or <discard-changes> operations) was not completed for some reason."]
},
"data-exists": {
"id": "data-exists", 
"is-read-only": false, 
"description": ["Request could not be completed because the relevant data model content already exists. For example, a 'create' operation was attempted on data that already exists."]
},
"data-missing": {
"id": "data-missing", 
"is-read-only": false, 
"description": ["Request could not be completed because the relevant data model content does not exist. For example, a 'delete' operation was attempted on data that does not exist."]
},
"operation-not-supported": {
"id": "operation-not-supported", 
"is-read-only": false, 
"description": ["Request could not be completed because the requested operation is not supported by this implementation."]
},
"operation-failed": {
"id": "operation-failed", 
"is-read-only": false, 
"description": ["Request could not be completed because the requested operation failed for some reason not covered by any other error condition."]
},
"partial-operation": {
"id": "partial-operation", 
"is-read-only": false, 
"description": ["This error-tag is obsolete, and SHOULD NOT be sent by servers conforming to this document."]
},
"malformed-message": {
"id": "malformed-message", 
"is-read-only": false, 
"description": ["A message could not be handled because it failed to be parsed correctly. For example, the message is not well-formed XML or it uses an invalid character set."]
},
"error-tag-type": {
"id": "error-tag-type", 
"is-read-only": false, 
"description": ["NETCONF Error Tag"]
},
"error": {
"id": "error", 
"is-read-only": false, 
"description": ["Error severity"]
},
"warning": {
"id": "warning", 
"is-read-only": false, 
"description": ["Warning severity"]
},
"error-severity-type": {
"id": "error-severity-type", 
"is-read-only": false, 
"description": ["NETCONF Error Severity"]
},
"merge": {
"id": "merge", 
"is-read-only": false, 
"description": ["The configuration data identified by the element containing this attribute is merged with the configuration at the corresponding level in the configuration datastore identified by the target parameter."]
},
"replace": {
"id": "replace", 
"is-read-only": false, 
"description": ["The configuration data identified by the element containing this attribute replaces any related configuration in the configuration datastore identified by the target parameter. If no such configuration data exists in the configuration datastore, it is created. Unlike a <copy-config> operation, which replaces the entire target configuration, only the configuration actually present in the config parameter is affected."]
},
"create": {
"id": "create", 
"is-read-only": false, 
"description": ["The configuration data identified by the element containing this attribute is added to the configuration if and only if the configuration data does not already exist in the configuration datastore. If the configuration data exists, an <rpc-error> element is returned with an <error-tag> value of 'data-exists'."]
},
"delete": {
"id": "delete", 
"is-read-only": false, 
"description": ["The configuration data identified by the element containing this attribute is deleted from the configuration if and only if the configuration data currently exists in the configuration datastore. If the configuration data does not exist, an <rpc-error> element is returned with an <error-tag> value of 'data-missing'."]
},
"remove": {
"id": "remove", 
"is-read-only": false, 
"description": ["The configuration data identified by the element containing this attribute is deleted from the configuration if the configuration data currently exists in the configuration datastore. If the configuration data does not exist, the 'remove' operation is silently ignored by the server."]
},
"edit-operation-type": {
"id": "edit-operation-type", 
"is-read-only": false, 
"description": ["NETCONF 'operation' attribute values"]
},
"get-config": {
"id": "get-config", 
"is-read-only": false, 
"description": ["Retrieve all or part of a specified configuration."]
},
"source": {
"id": "source", 
"is-read-only": false, 
"description": ["Particular configuration to retrieve."]
},
"config-source": {
"id": "config-source", 
"is-read-only": false, 
"description": ["The configuration to retrieve."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config source."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config source."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config source. This is optional-to-implement on the server because not all servers will support filtering for this datastore."]
},
"filter": {
"id": "filter", 
"is-read-only": false, 
"description": ["Subtree or XPath filter to use."]
},
"data": {
"id": "data", 
"is-read-only": false, 
"description": ["Copy of the source datastore subset that matched the filter criteria (if any). An empty data container indicates that the request did not produce any results."]
},
"edit-config": {
"id": "edit-config", 
"is-read-only": false, 
"description": ["The <edit-config> operation loads all or part of a specified configuration to the specified target configuration."]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Particular configuration to edit."]
},
"config-target": {
"id": "config-target", 
"is-read-only": false, 
"description": ["The configuration target."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config target."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config source."]
},
"merge": {
"id": "merge", 
"is-read-only": false, 
"description": ["The default operation is merge."]
},
"replace": {
"id": "replace", 
"is-read-only": false, 
"description": ["The default operation is replace."]
},
"none": {
"id": "none", 
"is-read-only": false, 
"description": ["There is no default operation."]
},
"default-operation": {
"id": "default-operation", 
"is-read-only": false, 
"description": ["The default operation to use."]
},
"test-then-set": {
"id": "test-then-set", 
"is-read-only": false, 
"description": ["The server will test and then set if no errors."]
},
"set": {
"id": "set", 
"is-read-only": false, 
"description": ["The server will set without a test first."]
},
"test-only": {
"id": "test-only", 
"is-read-only": false, 
"description": ["The server will only test and not set, even if there are no errors."]
},
"test-option": {
"id": "test-option", 
"is-read-only": false, 
"description": ["The test option to use."]
},
"stop-on-error": {
"id": "stop-on-error", 
"is-read-only": false, 
"description": ["The server will stop on errors."]
},
"continue-on-error": {
"id": "continue-on-error", 
"is-read-only": false, 
"description": ["The server may continue on errors."]
},
"rollback-on-error": {
"id": "rollback-on-error", 
"is-read-only": false, 
"description": ["The server will roll back on errors. This value can only be used if the 'rollback-on-error' feature is supported."]
},
"error-option": {
"id": "error-option", 
"is-read-only": false, 
"description": ["The error option to use."]
},
"edit-content": {
"id": "edit-content", 
"is-read-only": false, 
"description": ["The content for the edit operation."]
},
"config": {
"id": "config", 
"is-read-only": false, 
"description": ["Inline Config content."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["URL-based config content."]
},
"copy-config": {
"id": "copy-config", 
"is-read-only": false, 
"description": ["Create or replace an entire configuration datastore with the contents of another complete configuration datastore."]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Particular configuration to copy to."]
},
"config-target": {
"id": "config-target", 
"is-read-only": false, 
"description": ["The configuration target of the copy operation."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config target."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config target. This is optional-to-implement on the server."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config target."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["The URL-based configuration is the config target."]
},
"source": {
"id": "source", 
"is-read-only": false, 
"description": ["Particular configuration to copy from."]
},
"config-source": {
"id": "config-source", 
"is-read-only": false, 
"description": ["The configuration source for the copy operation."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config source."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config source."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config source."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["The URL-based configuration is the config source."]
},
"config": {
"id": "config", 
"is-read-only": false, 
"description": ["Inline Config content: <config> element. Represents an entire configuration datastore, not a subset of the running datastore."]
},
"delete-config": {
"id": "delete-config", 
"is-read-only": false, 
"description": ["Delete a configuration datastore."]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Particular configuration to delete."]
},
"config-target": {
"id": "config-target", 
"is-read-only": false, 
"description": ["The configuration target to delete."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config target."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["The URL-based configuration is the config target."]
},
"lock": {
"id": "lock", 
"is-read-only": false, 
"description": ["The lock operation allows the client to lock the configuration system of a device."]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Particular configuration to lock."]
},
"config-target": {
"id": "config-target", 
"is-read-only": false, 
"description": ["The configuration target to lock."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config target."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config target."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config target."]
},
"unlock": {
"id": "unlock", 
"is-read-only": false, 
"description": ["The unlock operation is used to release a configuration lock, previously obtained with the 'lock' operation."]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Particular configuration to unlock."]
},
"config-target": {
"id": "config-target", 
"is-read-only": false, 
"description": ["The configuration target to unlock."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config target."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config target."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config target."]
},
"get": {
"id": "get", 
"is-read-only": false, 
"description": ["Retrieve running configuration and device state information."]
},
"filter": {
"id": "filter", 
"is-read-only": false, 
"description": ["This parameter specifies the portion of the system configuration and state data to retrieve."]
},
"data": {
"id": "data", 
"is-read-only": false, 
"description": ["Copy of the running datastore subset and/or state data that matched the filter criteria (if any). An empty data container indicates that the request did not produce any results."]
},
"close-session": {
"id": "close-session", 
"is-read-only": false, 
"description": ["Request graceful termination of a NETCONF session."]
},
"kill-session": {
"id": "kill-session", 
"is-read-only": false, 
"description": ["Force the termination of a NETCONF session."]
},
"session-id": {
"id": "session-id", 
"is-read-only": false, 
"description": ["Particular session to kill."]
},
"commit": {
"id": "commit", 
"is-read-only": false, 
"description": ["Commit the candidate configuration as the device's new current configuration."]
},
"confirmed": {
"id": "confirmed", 
"is-read-only": false, 
"description": ["Requests a confirmed commit."]
},
"confirm-timeout": {
"id": "confirm-timeout", 
"is-read-only": false, 
"description": ["The timeout interval for a confirmed commit."]
},
"persist": {
"id": "persist", 
"is-read-only": false, 
"description": ["This parameter is used to make a confirmed commit persistent. A persistent confirmed commit is not aborted if the NETCONF session terminates. The only way to abort a persistent confirmed commit is to let the timer expire, or to use the <cancel-commit> operation. The value of this parameter is a token that must be given in the 'persist-id' parameter of <commit> or <cancel-commit> operations in order to confirm or cancel the persistent confirmed commit. The token should be a random string."]
},
"persist-id": {
"id": "persist-id", 
"is-read-only": false, 
"description": ["This parameter is given in order to commit a persistent confirmed commit. The value must be equal to the value given in the 'persist' parameter to the <commit> operation. If it does not match, the operation fails with an 'invalid-value' error."]
},
"discard-changes": {
"id": "discard-changes", 
"is-read-only": false, 
"description": ["Revert the candidate configuration to the current running configuration."]
},
"cancel-commit": {
"id": "cancel-commit", 
"is-read-only": false, 
"description": ["This operation is used to cancel an ongoing confirmed commit. If the confirmed commit is persistent, the parameter 'persist-id' must be given, and it must match the value of the 'persist' parameter."]
},
"persist-id": {
"id": "persist-id", 
"is-read-only": false, 
"description": ["This parameter is given in order to cancel a persistent confirmed commit. The value must be equal to the value given in the 'persist' parameter to the <commit> operation. If it does not match, the operation fails with an 'invalid-value' error."]
},
"validate": {
"id": "validate", 
"is-read-only": false, 
"description": ["Validates the contents of the specified configuration."]
},
"source": {
"id": "source", 
"is-read-only": false, 
"description": ["Particular configuration to validate."]
},
"config-source": {
"id": "config-source", 
"is-read-only": false, 
"description": ["The configuration source to validate."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["The candidate configuration is the config source."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["The running configuration is the config source."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["The startup configuration is the config source."]
},
"url": {
"id": "url", 
"is-read-only": false, 
"description": ["The URL-based configuration is the config source."]
},
"config": {
"id": "config", 
"is-read-only": false, 
"description": ["Inline Config content: <config> element. Represents an entire configuration datastore, not a subset of the running datastore."]
}}
}