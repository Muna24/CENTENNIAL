{ "schmea-information": {

"ietf-netconf-acm": {
"id": "ietf-netconf-acm", 
"is-read-only": false, 
"description": ["NETCONF Access Control Model. Copyright (c) 2012 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this YANG module is part of RFC 6536; see the RFC itself for full legal notices."]
},
"default-deny-write": {
"id": "default-deny-write", 
"is-read-only": false, 
"description": ["Used to indicate that the data model node represents a sensitive security system parameter. If present, and the NACM module is enabled (i.e., /nacm/enable-nacm object equals 'true'), the NETCONF server will only allow the designated 'recovery session' to have write access to the node. An explicit access control rule is required for all other users. The 'default-deny-write' extension MAY appear within a data definition statement. It is ignored otherwise."]
},
"default-deny-all": {
"id": "default-deny-all", 
"is-read-only": false, 
"description": ["Used to indicate that the data model node controls a very sensitive security system parameter. If present, and the NACM module is enabled (i.e., /nacm/enable-nacm object equals 'true'), the NETCONF server will only allow the designated 'recovery session' to have read, write, or execute access to the node. An explicit access control rule is required for all other users. The 'default-deny-all' extension MAY appear within a data definition statement, 'rpc' statement, or 'notification' statement. It is ignored otherwise."]
},
"user-name-type": {
"id": "user-name-type", 
"is-read-only": false, 
"description": ["General Purpose Username string."]
},
"matchall-string-type": {
"id": "matchall-string-type", 
"is-read-only": false, 
"description": ["The string containing a single asterisk '*' is used to conceptually represent all possible values for the particular leaf using this data type."]
},
"create": {
"id": "create", 
"is-read-only": false, 
"description": ["Any protocol operation that creates a new data node."]
},
"read": {
"id": "read", 
"is-read-only": false, 
"description": ["Any protocol operation or notification that returns the value of a data node."]
},
"update": {
"id": "update", 
"is-read-only": false, 
"description": ["Any protocol operation that alters an existing data node."]
},
"delete": {
"id": "delete", 
"is-read-only": false, 
"description": ["Any protocol operation that removes a data node."]
},
"exec": {
"id": "exec", 
"is-read-only": false, 
"description": ["Execution access to the specified protocol operation."]
},
"access-operations-type": {
"id": "access-operations-type", 
"is-read-only": false, 
"description": ["NETCONF Access Operation."]
},
"group-name-type": {
"id": "group-name-type", 
"is-read-only": false, 
"description": ["Name of administrative group to which users can be assigned."]
},
"permit": {
"id": "permit", 
"is-read-only": false, 
"description": ["Requested action is permitted."]
},
"deny": {
"id": "deny", 
"is-read-only": false, 
"description": ["Requested action is denied."]
},
"action-type": {
"id": "action-type", 
"is-read-only": false, 
"description": ["Action taken by the server when a particular rule matches."]
},
"node-instance-identifier": {
"id": "node-instance-identifier", 
"is-read-only": false, 
"description": ["Path expression used to represent a special data node instance identifier string. A node-instance-identifier value is an unrestricted YANG instance-identifier expression. All the same rules as an instance-identifier apply except predicates for keys are optional. If a key predicate is missing, then the node-instance-identifier represents all possible server instances for that key. This XPath expression is evaluated in the following context: o The set of namespace declarations are those in scope on the leaf element where this type is used. o The set of variable bindings contains one variable, 'USER', which contains the name of the user of the current session. o The function library is the core function library, but note that due to the syntax restrictions of an instance-identifier, no functions are allowed. o The context node is the root node in the data tree."]
},
"nacm": {
"id": "nacm", 
"is-read-only": false, 
"description": ["Parameters for NETCONF Access Control Model."]
},
"enable-nacm": {
"id": "enable-nacm", 
"is-read-only": false, 
"description": ["Enables or disables all NETCONF access control enforcement. If 'true', then enforcement is enabled. If 'false', then enforcement is disabled."]
},
"read-default": {
"id": "read-default", 
"is-read-only": false, 
"description": ["Controls whether read access is granted if no appropriate rule is found for a particular read request."]
},
"write-default": {
"id": "write-default", 
"is-read-only": false, 
"description": ["Controls whether create, update, or delete access is granted if no appropriate rule is found for a particular write request."]
},
"exec-default": {
"id": "exec-default", 
"is-read-only": false, 
"description": ["Controls whether exec access is granted if no appropriate rule is found for a particular protocol operation request."]
},
"enable-external-groups": {
"id": "enable-external-groups", 
"is-read-only": false, 
"description": ["Controls whether the server uses the groups reported by the NETCONF transport layer when it assigns the user to a set of NACM groups. If this leaf has the value 'false', any group names reported by the transport layer are ignored by the server."]
},
"denied-operations": {
"id": "denied-operations", 
"is-read-only": false, 
"description": ["Number of times since the server last restarted that a protocol operation request was denied."]
},
"denied-data-writes": {
"id": "denied-data-writes", 
"is-read-only": false, 
"description": ["Number of times since the server last restarted that a protocol operation request to alter a configuration datastore was denied."]
},
"denied-notifications": {
"id": "denied-notifications", 
"is-read-only": false, 
"description": ["Number of times since the server last restarted that a notification was dropped for a subscription because access to the event type was denied."]
},
"groups": {
"id": "groups", 
"is-read-only": false, 
"description": ["NETCONF Access Control Groups."]
},
"group": {
"id": "group", 
"is-read-only": false, 
"description": ["One NACM Group Entry. This list will only contain configured entries, not any entries learned from any transport protocols."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["Group name associated with this entry."]
},
"user-name": {
"id": "user-name", 
"is-read-only": false, 
"description": ["Each entry identifies the username of a member of the group associated with this entry."]
},
"rule-list": {
"id": "rule-list", 
"is-read-only": false, 
"description": ["An ordered collection of access control rules."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["Arbitrary name assigned to the rule-list."]
},
"group": {
"id": "group", 
"is-read-only": false, 
"description": ["List of administrative groups that will be assigned the associated access rights defined by the 'rule' list. The string '*' indicates that all groups apply to the entry."]
},
"rule": {
"id": "rule", 
"is-read-only": false, 
"description": ["One access control rule. Rules are processed in user-defined order until a match is found. A rule matches if 'module-name', 'rule-type', and 'access-operations' match the request. If a rule matches, the 'action' leaf determines if access is granted or not."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["Arbitrary name assigned to the rule."]
},
"module-name": {
"id": "module-name", 
"is-read-only": false, 
"description": ["Name of the module associated with this rule. This leaf matches if it has the value '*' or if the object being accessed is defined in the module with the specified module name."]
},
"rule-type": {
"id": "rule-type", 
"is-read-only": false, 
"description": ["This choice matches if all leafs present in the rule match the request. If no leafs are present, the choice matches all requests."]
},
"rpc-name": {
"id": "rpc-name", 
"is-read-only": false, 
"description": ["This leaf matches if it has the value '*' or if its value equals the requested protocol operation name."]
},
"notification-name": {
"id": "notification-name", 
"is-read-only": false, 
"description": ["This leaf matches if it has the value '*' or if its value equals the requested notification name."]
},
"path": {
"id": "path", 
"is-read-only": false, 
"description": ["Data Node Instance Identifier associated with the data node controlled by this rule. Configuration data or state data instance identifiers start with a top-level data node. A complete instance identifier is required for this type of path value. The special value '/' refers to all possible datastore contents."]
},
"access-operations": {
"id": "access-operations", 
"is-read-only": false, 
"description": ["Access operations associated with this rule. This leaf matches if it has the value '*' or if the bit corresponding to the requested operation is set."]
},
"action": {
"id": "action", 
"is-read-only": false, 
"description": ["The access control action associated with the rule. If a rule is determined to match a particular request, then this object is used to determine whether to permit or deny the request."]
},
"comment": {
"id": "comment", 
"is-read-only": false, 
"description": ["A textual description of the access rule."]
}}
}