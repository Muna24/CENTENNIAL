{ "schmea-information": {

"ietf-restconf": {
"id": "ietf-restconf", 
"is-read-only": false, 
"description": ["This module contains conceptual YANG specifications for the YANG Patch and error content that is used in RESTCONF protocol messages. A conceptual container representing the RESTCONF API nodes (media type application/yang.api). Note that the YANG definitions within this module do not represent configuration data of any kind. The YANG grouping statements provide a normative syntax for XML and JSON message encoding purposes. Copyright (c) 2013 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this YANG module is part of RFC XXXX; see the RFC itself for full legal notices."]
},
"data-resource-identifier": {
"id": "data-resource-identifier", 
"is-read-only": false, 
"description": ["Contains a Data Resource Identifier formatted string to identify a specific data node. The data node that uses this data type SHOULD define the document root for data resource identifiers. The default document root is the target datastore conceptual root node. Data resource identifiers are defined relative to this document root."]
},
"candidate": {
"id": "candidate", 
"is-read-only": false, 
"description": ["Identifies the NETCONF shared candidate datastore."]
},
"running": {
"id": "running", 
"is-read-only": false, 
"description": ["Identifies the NETCONF running datastore."]
},
"startup": {
"id": "startup", 
"is-read-only": false, 
"description": ["Identifies the NETCONF startup datastore."]
},
"datastore-identifier": {
"id": "datastore-identifier", 
"is-read-only": false, 
"description": ["Contains a string to identify a specific datastore. The enumerated datastore identifier values are reserved for standard datastore names."]
},
"revision-identifier": {
"id": "revision-identifier", 
"is-read-only": false, 
"description": ["Represents a specific date in YYYY-MM-DD format. TBD: make pattern more precise to exclude leading zeros."]
},
"yang-patch": {
"id": "yang-patch", 
"is-read-only": false, 
"description": ["A grouping that contains a YANG container representing the syntax and semantics of a YANG Patch edit request message."]
},
"yang-patch": {
"id": "yang-patch", 
"is-read-only": false, 
"description": ["Represents a conceptual sequence of datastore edits, called a patch. Each patch is given a client-assigned patch identifier. Each edit MUST be applied in ascending order, and all edits MUST be applied. If any errors occur, then the target datastore MUST NOT be changed by the patch operation. A patch MUST be validated by the server to be a well-formed message before any of the patch edits are validated or attempted. YANG datastore validation (defined in RFC 6020, section 8.3.3) is performed after all edits have been individually validated. It is possible for a datastore constraint violation to occur due to any node in the datastore, including nodes not included in the edit list. Any validation errors MUST be reported in the reply message."]
},
"patch-id": {
"id": "patch-id", 
"is-read-only": false, 
"description": ["An arbitrary string provided by the client to identify the entire patch. This value SHOULD be present in any audit logging records generated by the server for the patch. Error messages returned by the server pertaining to this patch will be identified by this patch-id value."]
},
"comment": {
"id": "comment", 
"is-read-only": false, 
"description": ["An arbitrary string provided by the client to describe the entire patch. This value SHOULD be present in any audit logging records generated by the server for the patch."]
},
"edit": {
"id": "edit", 
"is-read-only": false, 
"description": ["Represents one edit within the YANG Patch request message."]
},
"edit-id": {
"id": "edit-id", 
"is-read-only": false, 
"description": ["Arbitrary string index for the edit. Error messages returned by the server pertaining to a specific edit will be identified by this value."]
},
"create": {
"id": "create", 
"is-read-only": false, 
"description": ["The target data node is created using the supplied value, only if it does not already exist."]
},
"delete": {
"id": "delete", 
"is-read-only": false, 
"description": ["Delete the target node, only if the data resource currently exists, otherwise return an error."]
},
"insert": {
"id": "insert", 
"is-read-only": false, 
"description": ["Insert the supplied value into a user-ordered list or leaf-list entry. The target node must represent a new data resource."]
},
"merge": {
"id": "merge", 
"is-read-only": false, 
"description": ["The supplied value is merged with the target data node."]
},
"move": {
"id": "move", 
"is-read-only": false, 
"description": ["Move the target node. Reorder a user-ordered list or leaf-list. The target node must represent an existing data resource."]
},
"replace": {
"id": "replace", 
"is-read-only": false, 
"description": ["The supplied value is used to replace the target data node."]
},
"remove": {
"id": "remove", 
"is-read-only": false, 
"description": ["Delete the target node if it currently exists."]
},
"operation": {
"id": "operation", 
"is-read-only": false, 
"description": ["The datastore operation requested for the associated edit entry"]
},
"target": {
"id": "target", 
"is-read-only": false, 
"description": ["Identifies the target data resource for the edit operation."]
},
"point": {
"id": "point", 
"is-read-only": false, 
"description": ["The absolute URL path for the data node that is being used as the insertion point or move point for the target of this edit entry."]
},
"before": {
"id": "before", 
"is-read-only": false, 
"description": ["Insert or move a data node before the data resource identified by the 'point' parameter."]
},
"after": {
"id": "after", 
"is-read-only": false, 
"description": ["Insert or move a data node after the data resource identified by the 'point' parameter."]
},
"first": {
"id": "first", 
"is-read-only": false, 
"description": ["Insert or move a data node so it becomes ordered as the first entry."]
},
"last": {
"id": "last", 
"is-read-only": false, 
"description": ["Insert or move a data node so it becomes ordered as the last entry."]
},
"where": {
"id": "where", 
"is-read-only": false, 
"description": ["Identifies where a data resource will be inserted or moved. YANG only allows these operations for list and leaf-list data nodes that are ordered-by user."]
},
"value": {
"id": "value", 
"is-read-only": false, 
"description": ["Value used for this edit operation."]
},
"yang-patch-status": {
"id": "yang-patch-status", 
"is-read-only": false, 
"description": ["A grouping that contains a YANG container representing the syntax and semantics of YANG Patch status response message."]
},
"yang-patch-status": {
"id": "yang-patch-status", 
"is-read-only": false, 
"description": ["A container representing the response message sent by the server after a YANG Patch edit request message has been processed."]
},
"patch-id": {
"id": "patch-id", 
"is-read-only": false, 
"description": ["The patch-id value used in the request"]
},
"global-status": {
"id": "global-status", 
"is-read-only": false, 
"description": ["Report global errors or complete success. If there is no case selected then errors are reported in the edit-status container."]
},
"global-errors": {
"id": "global-errors", 
"is-read-only": false, 
"description": ["This container will be present if global errors unrelated to a specific edit occurred."]
},
"ok": {
"id": "ok", 
"is-read-only": false, 
"description": ["This leaf will be present if the request succeeded and there are no errors reported in the edit-status container."]
},
"edit-status": {
"id": "edit-status", 
"is-read-only": false, 
"description": ["This container will be present if there are edit-specific status responses to report."]
},
"edit": {
"id": "edit", 
"is-read-only": false, 
"description": ["Represents a list of status responses, corresponding to edits in the YANG Patch request message. If an edit entry was skipped or not reached by the server, then this list will not contain a corresponding entry for that edit."]
},
"edit-id": {
"id": "edit-id", 
"is-read-only": false, 
"description": ["Response status is for the edit list entry with this edit-id value."]
},
"edit-status-choice": {
"id": "edit-status-choice", 
"is-read-only": false, 
"description": ["A choice between different types of status responses for each edit entry."]
},
"ok": {
"id": "ok", 
"is-read-only": false, 
"description": ["This edit entry was invoked without any errors detected by the server associated with this edit."]
},
"location": {
"id": "location", 
"is-read-only": false, 
"description": ["Contains the Location header value that would be returned if this edit causes a new resource to be created. If the edit identified by the same edit-id value was successfully invoked and a new resource was created, then this field will be returned instead of 'ok'."]
},
"errors": {
"id": "errors", 
"is-read-only": false, 
"description": ["The server detected errors associated with the edit identified by the same edit-id value."]
},
"errors": {
"id": "errors", 
"is-read-only": false, 
"description": ["A grouping that contains a YANG container representing the syntax and semantics of a YANG Patch errors report within a response message."]
},
"errors": {
"id": "errors", 
"is-read-only": false, 
"description": ["Represents an error report returned by the server if a request results in an error."]
},
"error": {
"id": "error", 
"is-read-only": false, 
"description": ["An entry containing information about one specific error that occurred while processing a RESTCONF request."]
},
"transport": {
"id": "transport", 
"is-read-only": false, 
"description": ["The transport layer"]
},
"rpc": {
"id": "rpc", 
"is-read-only": false, 
"description": ["The rpc or notification layer"]
},
"protocol": {
"id": "protocol", 
"is-read-only": false, 
"description": ["The protocol operation layer"]
},
"application": {
"id": "application", 
"is-read-only": false, 
"description": ["The server application layer"]
},
"error-type": {
"id": "error-type", 
"is-read-only": false, 
"description": ["The protocol layer where the error occurred."]
},
"error-tag": {
"id": "error-tag", 
"is-read-only": false, 
"description": ["The enumerated error tag."]
},
"error-app-tag": {
"id": "error-app-tag", 
"is-read-only": false, 
"description": ["The application-specific error tag."]
},
"error-path": {
"id": "error-path", 
"is-read-only": false, 
"description": ["The target data resource identifier associated with the error, if any."]
},
"error-message": {
"id": "error-message", 
"is-read-only": false, 
"description": ["A message describing the error."]
},
"error-info": {
"id": "error-info", 
"is-read-only": false, 
"description": ["A container allowing additional information to be included in the error report."]
},
"restconf": {
"id": "restconf", 
"is-read-only": false, 
"description": ["A grouping that contains a YANG container representing the syntax and semantics of the RESTCONF API resource."]
},
"restconf": {
"id": "restconf", 
"is-read-only": false, 
"description": ["Conceptual container representing the application/yang.api resource type."]
},
"config": {
"id": "config", 
"is-read-only": false, 
"description": ["Container representing the application/yang.datastore resource type. Represents the conceptual root of the unified configuration datastore containing YANG data nodes. The child nodes of this container are configuration data resources (application/yang.data) defined as top-level YANG data nodes from the modules advertised by the server in /restconf/modules."]
},
"operational": {
"id": "operational", 
"is-read-only": false, 
"description": ["Container representing the application/yang.datastore resource type. Represents the conceptual root of the operational data supported by the server. The child nodes of this container are operational data resources (application/yang.data) defined as top-level YANG data nodes from the modules advertised by the server in /restconf/modules."]
},
"modules": {
"id": "modules", 
"is-read-only": false, 
"description": ["Contains a list of module description entries. These modules are currently loaded into the server."]
},
"module": {
"id": "module", 
"is-read-only": false, 
"description": ["Each entry represents one module currently supported by the server."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["The YANG module name."]
},
"revision": {
"id": "revision", 
"is-read-only": false, 
"description": ["The YANG module revision date. An empty string is used if no revision statement is present in the YANG module."]
},
"namespace": {
"id": "namespace", 
"is-read-only": false, 
"description": ["The XML namespace identifier for this module."]
},
"feature": {
"id": "feature", 
"is-read-only": false, 
"description": ["List of YANG feature names from this module that are supported by the server."]
},
"deviation": {
"id": "deviation", 
"is-read-only": false, 
"description": ["List of YANG deviation module names used by this server to modify the conformance of the module associated with this entry."]
},
"operations": {
"id": "operations", 
"is-read-only": false, 
"description": ["Container for all operation resources (application/yang.operation), Each resource is represented as an empty leaf with the name of the RPC operation from the YANG rpc statement. E.g.; POST /restconf/operations/show-log-errors leaf show-log-errors { type empty; }"]
},
"streams": {
"id": "streams", 
"is-read-only": false, 
"description": ["Container representing the notification event streams supported by the server."]
},
"stream": {
"id": "stream", 
"is-read-only": false, 
"description": ["Each entry describes an event stream supported by the server."]
},
"name": {
"id": "name", 
"is-read-only": false, 
"description": ["The stream name"]
},
"description": {
"id": "description", 
"is-read-only": false, 
"description": ["Description of stream content"]
},
"replay-support": {
"id": "replay-support", 
"is-read-only": false, 
"description": ["Indicates if replay buffer supported for this stream"]
},
"replay-log-creation-time": {
"id": "replay-log-creation-time", 
"is-read-only": false, 
"description": ["Indicates the time the replay log for this stream was created."]
},
"events": {
"id": "events", 
"is-read-only": false, 
"description": ["Represents the entry point for establishing notification delivery via server sent events."]
},
"1.0": {
"id": "1.0", 
"is-read-only": false, 
"description": ["Version 1.0 of the RESTCONF protocol."]
},
"version": {
"id": "version", 
"is-read-only": false, 
"description": ["Contains the RESTCONF protocol version."]
},
"notification": {
"id": "notification", 
"is-read-only": false, 
"description": ["Contains the notification message wrapper definition."]
},
"notification": {
"id": "notification", 
"is-read-only": false, 
"description": ["RESTCONF notification message wrapper."]
},
"event-time": {
"id": "event-time", 
"is-read-only": false, 
"description": ["The time the event was generated by the event source."]
}}
}